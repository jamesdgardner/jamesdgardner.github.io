---
title: Homework 2
subtitle: Data Visualization Basics
date: last-modified
from: markdown+emoji

execute: 
  warning: false
  message: false
  fig-width: 9
  fig-height: 7
---

```{r}
#| include: false
library(tidyverse)
library(skimr)
library(rmarkdown)

```

# Direction

- Provide your answer to each question in **Part 1 in Homework 2**.

- Please submit your **Quarto document for Part 1 in Homework 2** to the Brightspace with the name below:

  - `danl-200-hw2-LASTNAME-FIRSTNAME.qmd`\
  ( e.g., `danl-200-hw2-choe-byeonghak.qmd` )

- The due is March 8, 2024, 11:59 P.M.

- Please send an email to Byeong-Hak (`bchoe@geneseo.edu`) if you have any questions or clarifications.

<br><br><br>


# Part 1. Data Visualization Basics

<p align="center">
  <img src="https://bcdanl.github.io/lec_figs/holiday_movies.png" width="600px">
</p>



Below is the data.frame `holiday_movies` containing information about holiday & Christmas movies (Source: [the Internet Movie Database (IMDb)](https://www.imdb.com/)). 

```{r}
pathname <- "https://bcdanl.github.io/data/holiday_movies_w_genres.csv"
holiday_movies <- read_csv(pathname)
```

```{r}
rmarkdown::paged_table(holiday_movies)
```

## Variable Description

- `tconst`: alphanumeric unique identifier of the title

- `title_type`: the type/format of the title 

- `title`: the more popular title / the title used by the filmmakers on promotional materials at the point of release

- `genre`: genre associated with the title

- `year`: the release year of a title

- `runtime_minutes`: primary runtime of the title, in minutes

- `average_rating`: weighted average of all the individual user ratings on IMDb

- `num_votes`: number of votes the title has received on IMDb



<br>

## Question 1.
Provide both (1) `ggplot` code and (2) a comment to describe how the relationship between `log10(num_votes)` and `average_rating` varies by `genre`.

*Answer*:
```{r}
ggplot(data = holiday_movies) +
  geom_point(mapping = aes(x = average_rating, y = log10(num_votes)),
             alpha = .33) + 
  geom_smooth(mapping = aes(x = average_rating, y = log10(num_votes))) +
  facet_wrap(. ~ genre)

# This graph shows a very consistent bell curve for rating among each different genre. This makes logical sense because most people are going to rate a majority of movies as alright, while fewer are going to have polarizing opinions about every single movie that they watch.
```

<br><br>

## Question 2.
Provide both (1) `ggplot` code and (2) a comment to describe how the distribution of `genre` varies by `title_type`.


*Answer*:
```{r}
ggplot(data = holiday_movies) +
  geom_boxplot(mapping = aes(x = title_type, y = average_rating))


# The actual data range remains very consistent for each of the 3 "title_type"s. However the interquartile range is staggered, with the average ratings going from lowest to highest (movie -> tvMovie -> video).
```


<br><br>


## Question 3.
Provide both (1) `ggplot` code and (2) a comment to describe how the distribution of `average_rating`, such as quartile values and outliers, varies by `genre` and `title_type`.


*Answer*:
```{r}
ggplot(data = holiday_movies) +
  geom_boxplot(mapping = aes(x = title_type, y = average_rating)) +
  facet_wrap(. ~ genre)

# For every individual genre, we can see an almost totally consistent trend about how average_rating is distributed by title_type. For every genre except for Animation & Drama, the order from lowest to highest scores follows the same trend as the above box plot. (movie -> tvMovie -> video)

```


<br><br>


## Question 4.
Provide both (1) `ggplot` code and (2) a comment to describe how the distribution of `log(num_votes)` varies by `genre`.

*Answer*:
```{r}
ggplot(data = holiday_movies) +
  geom_boxplot(mapping = aes(x = genre, y =log(num_votes)))

# Here we can see a distribution of how many votes are given to each genre of movie. Comedy, Drama, and Romance all have a higher interquartile range, while Animation, and Family both have lower interquartile ranges. According this data, Movies from the genres Romance, Drama, and Comedy receive more user rating than Movies that are Animation or Family.
```


<br><br>


## Question 5.
Below is the data.frame, `holiday_movies_genre_yearly`, containing yearly mean value of `average_rating` for each `genre`.

```{r}
holiday_movies_genre_yearly <- read_csv("https://bcdanl.github.io/data/holiday_movies_w_genres_yearly.csv")
```

Provide both (1) `ggplot` code and (2) a comment to describe how the yearly trend of `average_rating` varies by `genre`.



*Answer*:
```{r}
ggplot(data = holiday_movies_genre_yearly) +
  geom_point(mapping = aes(x = year, y = average_rating)) +
  geom_smooth(mapping = aes(x = year, y = average_rating)) +
  facet_wrap(genre ~ .)

# By looking at each of the trend lines shown here, we can see that regardless of genre, viewers tend to rate movies from the late 1970s, 1980s, and early 1990s the highest. While when we look at movies from the 2010's era, we see an almost universal dip in consumer ratings.
```



<br><br>



## Question 6.
Provide your GitHub username, if you have not provided it in Homework 1.

*Answer*:jamesdgardner.github.io



<br><br><br>




# Part 2. Survey

- If you have not completed the survey in Homework 1, please do it this time:

  - [Link to Google Form Survey](https://docs.google.com/forms/d/e/1FAIpQLSd9_zJ3lzcbcGpEPCWCSBL7q7ZSRX5Gxkot-fIaQQupPmCcSg/viewform?usp=sf_link)

<br><br><br>


# Part 3. Quarto Website

- If you have not completed decorating your website in Homework 1, please do it this time:


1. Decorate your website:
  - Replace `YOUR NAME` with your name in `_quarto.yml` and `index.qmd`.
  - Describe yourself in `index.qmd`.
  - Add the picture file (e.g., `png`) of your profile photo to `img` directory. Then correct `img/profile.png` in `index.qmd` accordingly.
  - Add the PDF file of your resumé to the website working directory in your laptop (or Posit Cloud).
  - Correct links for your resumé, LinkedIn, email, and optionally social media.
  - Make sure that you do not have any broken links in your website.

2. Add a link to the page of "R Basics" to the navigation bar using `danl-200-quarto.qmd`.

3. Use the 3-step git commands (`git add`, `git commit`, and `git push`) to update your online website.

<br>
